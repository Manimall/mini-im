import { fork } from 'redux-saga/effects';

import {combineReducers} from 'redux'
import {connectRouter} from 'connected-react-router'

// all App reducers
import { allPhonesReducer as entities } from 'modules/shared_reducers/allPhonesReducer'
import { phonesPageReducer as phonesPage } from 'modules/shared_reducers/phonesPageReducer'
import { singlePhoneReducer as singlePhonePage } from 'modules/SinglePhone'
import { basketReducer as basket } from 'modules/Basket'
import { searchReducer as search} from 'modules/Search'
import { categoriesReducer as categories } from 'modules/Categories'

// sagas
import { fetchPhonesSaga } from 'modules/Phones'
import { loadMorePhonesSaga } from 'modules/LoadMorePhones'
import { fetchPhoneByIdSaga } from 'modules/SinglePhone'
import { searchSaga } from 'modules/Search'
import { categoriesSaga } from 'modules/Categories'


const createRootReducer = (history) => combineReducers({
  router: connectRouter(history),
  entities, // main reducer
  phonesPage,
  singlePhonePage,
  basket,
  search,
  categories,
});

export default createRootReducer;

export function* rootSaga() {
  yield fork(fetchPhonesSaga);
  yield fork(loadMorePhonesSaga);
  yield fork(fetchPhoneByIdSaga);
  yield fork(searchSaga);
  yield fork(categoriesSaga);
}
